{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SanketNayak\\\\Documents\\\\New1\\\\mernstack\\\\frontend\\\\src\\\\components\\\\ProductSearch.tsx\",\n  _s = $RefreshSig$();\n// import { ProductContext } from \"../context/productContext\";\n\nimport { useDispatch } from \"react-redux\";\nimport { fetchProducts, setSearchKey } from \"../redux/producListSlice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProductSearch = () => {\n  _s();\n  // const {products, url , filteredProducts, setFilteredProducts} = useContext(ProductContext)\n  // const [searchKey, setSearchKey] = useState('');\n\n  const dispatch = useDispatch();\n  // const products = useSelector((state:RootState) => ({products: state.products.products})).products\n  const searchByName = e => {\n    // Preventing the default form submission.\n    // console.log(products.filter((p) => p.productName.toLocaleLowerCase().includes(searchKey)))\n    const value = e.target.value;\n    if (value && value.trim().length === 0) {\n      return;\n    }\n    dispatch(setSearchKey(value));\n    dispatch(fetchProducts(value));\n  };\n\n  // console.log(filteredProducts);\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"d-flex\",\n    role: \"search\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"form-control me-2\",\n      type: \"search\",\n      placeholder: \"Search\",\n      \"aria-label\": \"Search\",\n      onChange: searchByName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 15\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-outline-success\",\n      type: \"submit\",\n      children: \"Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 15\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n};\n/*\n  Two Solutions to this problem. \n   1) having global state above the both the components. \n   2) Using Redux.\n*/\n_s(ProductSearch, \"rgTLoBID190wEKCp9+G8W6F7A5M=\", false, function () {\n  return [useDispatch];\n});\n_c = ProductSearch;\nexport default ProductSearch;\nvar _c;\n$RefreshReg$(_c, \"ProductSearch\");","map":{"version":3,"names":["useDispatch","fetchProducts","setSearchKey","jsxDEV","_jsxDEV","ProductSearch","_s","dispatch","searchByName","e","value","target","trim","length","className","role","children","type","placeholder","onChange","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/SanketNayak/Documents/New1/mernstack/frontend/src/components/ProductSearch.tsx"],"sourcesContent":["import { FC, useCallback, useContext, useEffect, useReducer, useState } from \"react\"\n// import { ProductContext } from \"../context/productContext\";\nimport IProduct from \"../model/product\";\nimport ProductsList from \"./ProductList\";\nimport { useSelector , useDispatch } from \"react-redux\";\nimport { AppDispatch, RootState } from \"../redux/store\";\nimport { fetchProducts, setSearchKey } from \"../redux/producListSlice\";\n\nconst ProductSearch = () => {\n    // const {products, url , filteredProducts, setFilteredProducts} = useContext(ProductContext)\n    // const [searchKey, setSearchKey] = useState('');\n    \n    const dispatch= useDispatch<AppDispatch>();\n    // const products = useSelector((state:RootState) => ({products: state.products.products})).products\n    const searchByName = (e:React.ChangeEvent<HTMLInputElement>) => {\n        // Preventing the default form submission.\n        // console.log(products.filter((p) => p.productName.toLocaleLowerCase().includes(searchKey)))\n        const value = e.target.value\n\n        if(value && value.trim().length === 0) {\n            return \n        }\n        dispatch(setSearchKey(value))\n        dispatch(fetchProducts(value))\n    }\n    \n    // console.log(filteredProducts);\n    return (\n        <form className=\"d-flex\" role=\"search\">\n              <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" onChange={searchByName}/>\n              <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\n        </form>\n    )\n}\n/*\n  Two Solutions to this problem. \n   1) having global state above the both the components. \n   2) Using Redux.\n*/\n\nexport default ProductSearch"],"mappings":";;AACA;;AAGA,SAAuBA,WAAW,QAAQ,aAAa;AAEvD,SAASC,aAAa,EAAEC,YAAY,QAAQ,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvE,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB;EACA;;EAEA,MAAMC,QAAQ,GAAEP,WAAW,CAAc,CAAC;EAC1C;EACA,MAAMQ,YAAY,GAAIC,CAAqC,IAAK;IAC5D;IACA;IACA,MAAMC,KAAK,GAAGD,CAAC,CAACE,MAAM,CAACD,KAAK;IAE5B,IAAGA,KAAK,IAAIA,KAAK,CAACE,IAAI,CAAC,CAAC,CAACC,MAAM,KAAK,CAAC,EAAE;MACnC;IACJ;IACAN,QAAQ,CAACL,YAAY,CAACQ,KAAK,CAAC,CAAC;IAC7BH,QAAQ,CAACN,aAAa,CAACS,KAAK,CAAC,CAAC;EAClC,CAAC;;EAED;EACA,oBACIN,OAAA;IAAMU,SAAS,EAAC,QAAQ;IAACC,IAAI,EAAC,QAAQ;IAAAC,QAAA,gBAChCZ,OAAA;MAAOU,SAAS,EAAC,mBAAmB;MAACG,IAAI,EAAC,QAAQ;MAACC,WAAW,EAAC,QAAQ;MAAC,cAAW,QAAQ;MAACC,QAAQ,EAAEX;IAAa;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eACrHnB,OAAA;MAAQU,SAAS,EAAC,yBAAyB;MAACG,IAAI,EAAC,QAAQ;MAAAD,QAAA,EAAC;IAAM;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACzE,CAAC;AAEf,CAAC;AACD;AACA;AACA;AACA;AACA;AAJAjB,EAAA,CA1BMD,aAAa;EAAA,QAICL,WAAW;AAAA;AAAAwB,EAAA,GAJzBnB,aAAa;AAgCnB,eAAeA,aAAa;AAAA,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}