{"ast":null,"code":"class HttpClient {\n  // Promise<IProduct[]> --> Returning Promise of Type IProduct.\n  async get(url) {\n    const response = await fetch(url);\n    const data = await response.json();\n    return data;\n  }\n  // Getting a product using the id number , it will return you a single product.\n  async getById(url, id) {\n    const response = await fetch(`${url}/${id}`);\n    const data = await response.json();\n    return data;\n  }\n\n  // Helps you with the real modifications.\n  async put(url, data) {\n    const response = await fetch(`${url}/${data.productId}`, {\n      method: 'PUT',\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(data)\n    });\n    return await response.json();\n  }\n}\nexport default new HttpClient();","map":{"version":3,"names":["HttpClient","get","url","response","fetch","data","json","getById","id","put","productId","method","headers","body","JSON","stringify"],"sources":["C:/Users/SanketNayak/Documents/New1/mernstack/frontend/src/apiClient/httpClient.ts"],"sourcesContent":["import IProduct from \"../model/product\";\n\nclass HttpClient{\n    // Promise<IProduct[]> --> Returning Promise of Type IProduct.\n    async get(url:string): Promise<IProduct[]> {\n        const response = await fetch(url)\n        const data = await response.json();\n        return <IProduct[]>data;\n    }\n    // Getting a product using the id number , it will return you a single product.\n    async getById(url : string, id:number) : Promise<IProduct> {\n        const response = await fetch(`${url}/${id}`)\n        const data = await response.json();\n        return <IProduct>data;\n    }\n\n    // Helps you with the real modifications.\n    async put(url : string , data:any) : Promise<IProduct> {\n        const response = await fetch(`${url}/${data.productId}`,{\n            method:'PUT',\n            headers:{\n                \"Content-Type\":\"application/json\",\n            },\n            body: JSON.stringify(data)\n        })\n        return await response.json();\n    }\n}\nexport default new HttpClient();"],"mappings":"AAEA,MAAMA,UAAU;EACZ;EACA,MAAMC,GAAGA,CAACC,GAAU,EAAuB;IACvC,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACF,GAAG,CAAC;IACjC,MAAMG,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;IAClC,OAAmBD,IAAI;EAC3B;EACA;EACA,MAAME,OAAOA,CAACL,GAAY,EAAEM,EAAS,EAAsB;IACvD,MAAML,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEF,GAAI,IAAGM,EAAG,EAAC,CAAC;IAC5C,MAAMH,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;IAClC,OAAiBD,IAAI;EACzB;;EAEA;EACA,MAAMI,GAAGA,CAACP,GAAY,EAAGG,IAAQ,EAAsB;IACnD,MAAMF,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEF,GAAI,IAAGG,IAAI,CAACK,SAAU,EAAC,EAAC;MACpDC,MAAM,EAAC,KAAK;MACZC,OAAO,EAAC;QACJ,cAAc,EAAC;MACnB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACV,IAAI;IAC7B,CAAC,CAAC;IACF,OAAO,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;EAChC;AACJ;AACA,eAAe,IAAIN,UAAU,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}